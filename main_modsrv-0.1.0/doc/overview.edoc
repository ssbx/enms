@author Sebastien Serre <sserre.bx@gmail.com>
@version 0.1.0
@title main_modsrv
@doc 
<p><em>main_modsrv</em> module registration. <em>main_modsrv</em> is
responsible of maintaining a list of modules and their configuration.
Any module registered will offer his configuration options to others and have 
access to other configurations.</p>

<h2>General functions</h2>
<p>Here is an example of the general functionnement of a module registration.
This example assert that at least one module is allready registered:
    <ul>
        <li>
            A module start and register itself by calling 
            <b>modsrv:hello/2</b>,
        </li>
        <li>
            <em>modsrv</em> register the module name and arguments list,
        </li>
        <li>
            then send to all allready registered modules the new module 
            definition using the callback 
            <b>ModuleCallback:modsrv_notify/1</b>
        </li>
        <li>
            and return the the new module the definition of allready 
            registered modules using <b>ModuleCallback:modsrv_notify/1</b>
        </li>
        <li>
            each time a module change his configuration the event is 
            propagated to all modules.
        </li>
    </ul>
    See the {@link modsrv. <b><em>modsrv</em> documentation</b>}
</p>
<h2>What for</h2>
<h3>Events</h3>
<p>
    All Enms modules need a way of communicating events to others. To do so, 
    a module must export an event loop on wich others modules can register
    theyre proper <b>gen_event</b> module behaviour for regirecting any events
    of interest to specific functions. <em>main_modsrv</em> have been build
    to give informations that module may need to have:
    <ul>
        <li>
            what modules are present,
        </li>
        <li>
            do they export an event module,
        </li>
        <li>
            how can I add a <b>gen_event</b> module to it.
        </li>
    </ul>
</p>
<h3>main_ifs</h3>
    <p>
        All modules which have events of interest for users behind a client 
        must export an event loop described before. <em>main_ifs</em> also 
        need some specific parameters. These parameters are givent during the
        registration process.
    </p>
    <p>See <b>Building module tutorial</b> and 
    {@link main_ifs. <em> main_ifs</em>} documentation</p>
<h3>other modules</h3>
    <p>
        Like <em>main_ifs</em>, future modules may need to get some 
        configuration options.
    </p>
    <p>See <b>Building module tutorial</b></p>




