ModTracker DEFINITIONS EXPLICIT TAGS ::=
BEGIN

IpAdd   ::= PrintableString

ErlangModule    ::= PrintableString
Second          ::= INTEGER

TargetId        ::= PrintableString (SIZE (1..50))
TargetHostname  ::= PrintableString (SIZE (0..50))
TargetTags      ::= SEQUENCE OF TargetTag
TargetTag       ::= PrintableString (SIZE (1..50))
TargetProperties ::= SEQUENCE OF TargetProperty
TargetProperty  ::= PrintableString
TargetInfoType  ::= ENUMERATED {create(0), delete(1), update(2)}

ProbeId         ::= INTEGER
ProbeName       ::= PrintableString (SIZE (1..30))
ProbeStatus     ::= PrintableString (SIZE (1..15))
ProbeType       ::= ENUMERATED {fetch(0), status(1)}
ProbeInfoType   ::= ENUMERATED {create(0), delete(1), update(2)}
ProbeValue      ::= INTEGER
ProbeStep       ::= Second
ProbeTimeoutMax ::= INTEGER
ProbeTimeoutWait    ::= Second
ProbeInspectors ::= SEQUENCE OF ErlangModule
ProbeRRDCreate  ::= PrintableString
ProbeRRDUpdate  ::= PrintableString
ProbeRRDGraph   ::= PrintableString

RRDFile         ::= OCTET STRING

ProbeInfo   ::= SEQUENCE {
    channel     TargetId,
    probeId     ProbeId,
    name        ProbeName,
    type        ProbeType,
    probeMod    ErlangModule,
    status      ProbeStatus,
    step        ProbeStep,
    timeoutMax  ProbeTimeoutMax,
    timeoutWait ProbeTimeoutWait,
    inspectors  ProbeInspectors,
    --rrdCreate   ProbeRRDCreate,
    --rrdUpdate   ProbeRRDCreate,
    --rrdGraph    ProbeRRDCreate,
    infoType    ProbeInfoType
}
ProbeDump   ::= SEQUENCE {
    channel     TargetId,
    probeId     ProbeId,
    probeType   ProbeType,
    rrdData     RRDFile
}

-- ProbeInfo   ::= SEQUENCE {
--     channel     TargetId,
--     probe       ProbeId,
--     status      ProbeStatus,
--     name        ProbeName,
--     type        ProbeType,
--     infoType    ProbeInfoType
-- }

ProbeFetch  ::= SEQUENCE {
    channel     TargetId,
    probe       ProbeId,
    probeType   ProbeType,
    probeValue  ProbeValue
}
-- complete avec le tracker.hrl records finaux
TargetInfo  ::= SEQUENCE {
    channel     TargetId,
    hostname    TargetHostname,
    ipAdd       IpAdd,
    tags        TargetTags,
    properties  TargetProperties,
    type        TargetInfoType
}

TrackerPDU ::= CHOICE {
    fromServer  [0] CHOICE {
        targetInfo  [1] TargetInfo,
        probeInfo   [2] ProbeInfo,
        probeFetch  [3] ProbeFetch,
        probeDump   [4] ProbeDump,
        ...
    },
    fromClient  [1] PrintableString
}

END
