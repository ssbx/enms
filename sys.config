[
    {supercast,   
        [
            {auth_module,   bsupercast_auth_ldap},
            {acctrl_module, bsupercast_acctrl_rbac},

            % if a PDU come from client with asn_key, switch it to the module
            % implementing the supercast_module_behaviour.
            {pdu_dispatch, 
                [
                    % {supercast_module_behaviour, asn_key}
                    {tracker_api, modTrackerPDU} 
                ]
            },

            % this is the initial list of channels for the client. It must be
            % the entry point for all other channels. For example, once
            % the client subscribe to the tracker channel, this one will
            % tell the client wich chan he knows about, and wich chans
            % disapear. This module can also be a simple "beha_supercast_channel" 
            % module.
            {main_channels,
                [
                    % in this case, tracker serve as a channel information
                    % source and give to clients basic informations and alerts
                    % that do not need subscribtion to specific channels. Note
                    % that this atom is in fact the registered name of 
                    % tracker_master_channel in this example.
                    'target-MasterChan'
                ]
            },

            {tcp_client, 
                [
                    {enabled, true},
                    {port, 8888},
                    {maxconn, 50},
                    {encoder, bsupercast_encoder_asn}
                ]
            },
            {ssl_client, 
                [
                    {enabled, true},
                    {ssl_conf,  "var/supercast/ssl.conf"},
                    {port, 4443},
                    {maxconn, 50},
                    {encoder, bsupercast_encoder_asn}
                ]
            }
        ]
    },
    {
        errd,
            [
                {command, "/opt/rrdtool-1.4.8_SERVER/bin/rrdtool"}
            ]
    },
    {activity_logger,
        [
            {log_file, "var/activity.log"}
        ]
    },
    {tracker,
        [
            {registered_events,     [activity_logger]},
            {db_dir,                "var/tracker"},
            {targets_data_dir,      "var/tracker/targets_data"},
            {master_chan_read_perm, ["admin"]},
            {probe_modules, 
                [
                    btracker_probe_snmp,
                    btracker_probe_dns,
                    btracker_probe_nagios
                ]
            }
        ]
    },
    {esnmp, []},
    {snmp,
        [
            {manager,
                [
                    %{restart_type, restart_type()},

                    %{inform_request_behaviour, manager_irb()},
                    %{mibs,         manager_mibs()},
                    %{priority,     priority()},
                    %{audit_trail_log,  audit_trail_log()},

                    %{server,       server()},
                    {server,
                        [
                            {timeout,   30000},
                            {verbosity, silence}
                        ]
                    },

                    {note_store,   
                        [
                            %{timeout,   note_store_timeout()},
                            {verbosity, silence}
                        ]
                    },

                    %{version,      versions()},
                    {versions, [v2]},

                    %{config,       manager_config()},
                    {config,
                        [
                            {dir,       "lib/esnmp/priv/snmp/manager/conf"},
                            {db_dir,    "lib/esnmp/priv/snmp/manager/db"},
                            {verbosity, silence}

                            %{db_init_error,    db_init_error()},
                            %{repair,           manager_repair()},
                            %{auto_save,        manager_auto_save()},
                        ]
                    },

                    %{def_user_data,    def_user_data()},
                    %{def_user_mod,     def_user_module()},
                    {def_user_mod,  esnmp_user_default},


                    %{net_if,       manager_net_if()},
                    {net_if,
                        [
                            %{module, manager_net_if_module()},
                            {module, esnmp_net_if},

                            %{verbosity, verbosity()}
                            {verbosity, silence}

                            %{options, 
                                %[
                                    %{bind_to,      bind_to()},
                                    %{sndbuf,       sndbuf()},
                                    %{recbuf,       recbuf()},
                                    %{no_reuse,     no_reuse()},
                                    %{filter,       
                                        %[
                                            %{module, manager_net_if_filter_module()}
                                        %]
                                    %}
                                %]
                            %},
                        ]
                    }
                ]
            }
        ]
    },
    {kernel,
        [
            {start_dist_ac, false},
            {inet_dist_listen_min, 9000},
            {inet_dist_listen_max, 9000}
        ]
    },
    {sasl,
        [
            {sasl_error_logger, {file, "var/sasl/sasl.log"}}
        ]
    },
    {exec,
        [
            %{alarm, ?},
            %{debug, true},
            %{args, ?},
            {user, "seb9000"}
        ]
    }
].
