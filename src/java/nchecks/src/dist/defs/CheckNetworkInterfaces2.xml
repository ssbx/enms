<?xml version="1.0" encoding="UTF-8"?>
<NChecks xmlns="http://schemas.sysmo.io/2015/NChecks">
    <Check
        Id="CheckNetworkInterfaces"
        Version="1.0"
        Class="io.sysmo.nchecks.modules.CheckNetworkInterfaces">

        <Author><![CDATA[Sebastien Serre <ssbx@sysmo.io>]]></Author>
        <AuthorUrl>http://www.sysmo.io</AuthorUrl>
        <UpdatesUrl>http://www.sysmo.io/nchecks/updates/CheckNetworkInterfaces/</UpdatesUrl>

        <Description>Monitor and log interfaces performances values</Description>
        <Overview>Overview and examples here</Overview>

        <Require Ressource="snmp" />

        <FlagTable>

            <Flag Id="if_selection">
                <Hint>A comma separated list of interfaces indexes.</Hint>
                <Usage>Comma separated list of integers representing snmp interface indexes</Usage>

                <Helper Id="SelectNetworkInterfaces" Type="table">
                    <Require Ressource="snmp" />
                    <Description>This helper offer a list view of the target device interfaces</Description>

                    <!--
                        Return will be a table (Helper:Type=table)
                        of type tree (TableReturn:TreeRoot=tr), with treeroot "ifType".
                        User will be able to select multiple(SelectionType)
                        elements.
                        The row "ifIndex"(Select) of all selected elements
                        will be appended to the content of the flag, separated
                        by ","(ListSeparator mandatory because SelectionType).
                        A usage message(Usage) will be shown to user.
                        The table will have 3 rows (Column...), ifDescr,
                        ifIndex and ifPhysAddress. The fourth, ifType is not
                        listed because it will appear as "ifType(content)" as
                        the tree root.
                        "io.sysmo.nchecks.CheckNetworkInterfaces" should
                        return a json object like:
                        {
                            "name": "SelectNetworkInterfaces",
                            "rows": [
                                {
                                    "ifType": "9",
                                    "ifDescr": "fa0/0",
                                    "ifIndex": "0",
                                    "ifPhysAddress": "aa"
                                }
                            ]
                        }
                        -->
                    <TableReturn
                        TreeRoot="ifType"
                        Select="ifIndex"
                        SelectionType="multiple">
                        <ListSeparator>,</ListSeparator>
                        <Usage>Please select interfaces you want to monitor.</Usage>
                        <Column Id="ifDescr"        Position="0" Type="string" />
                        <Column Id="ifIndex"        Position="1" Type="string" />
                        <Column Id="ifPhysAddress"  Position="2" Type="string" />
                    </TableReturn>
                </Helper>

            </Flag>

        </FlagTable>


        <Performances Type="table">

            <FlagSource Name="if_selection"/>
            <FlagSeparator>,</FlagSeparator>

            <FilePrefix>ifIndex</FilePrefix>
            <FileSuffix>.rrd</FileSuffix>


            <!-- PropertyPrefix PropertySuffix
            if present, the client will take the
            ${prefix="ifIndex"}${"if_selection[x]"}${suffix=""} from the target -->
            <PropertyPrefix>ifIndex</PropertyPrefix>
            <PropertySuffix>-ifName</PropertySuffix>


            <DataSourceTable>
                <DataSource Id="IfInOctets"       Type="COUNTER" />
                <DataSource Id="IfInUcastPkts"    Type="COUNTER" />
                <DataSource Id="IfInNucastPkts"   Type="COUNTER" />
                <DataSource Id="IfInErrors"       Type="COUNTER" />
                <DataSource Id="IfOutOctets"      Type="COUNTER" />
                <DataSource Id="IfOutUcastPkts"   Type="COUNTER" />
                <DataSource Id="IfOutNucastPkts"  Type="COUNTER" />
                <DataSource Id="IfOutErrors"      Type="COUNTER" />
            </DataSourceTable>
            <GraphTable>
                <Graph
                    Id="OctetsInOut"
                    Minimum="0"
                    Maximum="undefined"
                    Rigid="false"
                    Base="1000"
                    Unit=""
                    UnitExponent="0" >
                    <Title>Octets In/Out</Title>
                    <VerticalLabel>octets</VerticalLabel>
                    <Draw
                        Type="area"
                        DataSource="IfInOctets"
                        Consolidation="MAX"
                        Color="#726fcfff" >
                        Octets in
                    </Draw>
                     <Draw
                        Type="line"
                        DataSource="IfOutOctets"
                        Consolidation="MAX"
                        Color="#73d216ff" >
                        Octets out
                    </Draw>
                </Graph>
                <Graph
                    Id="UnicastNonUnicast"
                    Minimum="0"
                    Maximum="undefined"
                    Rigid="false"
                    Base="1000"
                    Unit=""
                    UnitExponent="0" >
                    <Title>Unicast/Non Unicast Packets In/Out</Title>
                    <VerticalLabel>packets</VerticalLabel>
                    <Draw
                        Type="area"
                        DataSource="IfInUcastPkts"
                        Consolidation="MAX"
                        Color="#3465a4ff" >
                        Unicast packets In
                    </Draw>
                    <Draw
                        Type="area"
                        DataSource="IfInNucastPkts"
                        Consolidation="MAX"
                        Color="#4e9a06ff" >
                        Non Unicast Packets In
                    </Draw>
                    <Draw
                        Type="line"
                        DataSource="IfOutUcastPkts"
                        Consolidation="MAX"
                        Color="#c17d11ff" >
                        Unicast packets Out
                    </Draw>
                    <Draw
                        Type="line"
                        DataSource="IfOutNucastPkts"
                        Consolidation="MAX"
                        Color="#e9b96eff" >
                        Non Unicast packets Out
                    </Draw>
                </Graph>
                <Graph
                    Id="ErrorsInOut"
                    Minimum="0"
                    Maximum="undefined"
                    Rigid="false"
                    Base="1000"
                    Unit=""
                    UnitExponent="0" >
                    <Title>Errors In/Out</Title>
                    <VerticalLabel>Errors</VerticalLabel>
                    <Draw
                        Type="line"
                        DataSource="IfInErrors"
                        Consolidation="MAX"
                        Color="#cc0000ff" >
                        Octets in
                    </Draw>
                     <Draw
                        Type="line"
                        DataSource="IfOutErrors"
                        Consolidation="MAX"
                        Color="#fce94fff" >
                        Octets out
                    </Draw>
                </Graph>
            </GraphTable>
        </Performances>
    </Check>
</NChecks>
